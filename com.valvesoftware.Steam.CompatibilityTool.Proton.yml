id: com.valvesoftware.Steam.CompatibilityTool.Proton
default-branch: stable
runtime: com.valvesoftware.Steam
runtime-version: stable
sdk: org.freedesktop.Sdk//19.08
build-extension: true
appstream-compose: false

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.mingw-w64

build-options:
  prefix: /app/share/steam/compatibilitytools.d/Proton
  append-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
  strip: true
  cflags: &optflags -march=nocona -mtune=core-avx2 -mfpmath=sse
  cxxflags: *optflags

x-compat-i386-opts: &compat_i386_opts
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  ldflags: -L/app/lib32
  prepend-path: /app/share/steam/compatibilitytools.d/Proton/bin32
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: ccache i686-unknown-linux-gnu-gcc
    CXX: ccache i686-unknown-linux-gnu-g++
  libdir: /app/share/steam/compatibilitytools.d/Proton/lib32

x-proton-source: &proton_source
  type: archive
  url: "https://github.com/ValveSoftware/Proton/archive/proton-5.0-3.tar.gz"
  sha256: e097ea7c6f275239cde8643ee6bb5ff42291decf0627d45f5f148a6b0a0491c2

x-proton-version: &proton_version 5.0-3

x-wine-source: &wine_source
  type: git
  url: "https://github.com/ValveSoftware/wine.git"
  commit: a1e5640b60439f0df83fc24c8a69629cef2c6c67

x-vkd3d-source: &vkd3d_source
  type: git
  url: "https://github.com/ValveSoftware/vkd3d.git"
  commit: f548d817e5cbeebf0c93f1e2cb2e033c58a9b110

x-openvr-source: &openvr_source
  type: git
  url: "https://github.com/ValveSoftware/openvr.git"
  commit: 52065df3d6f3af96300dac98cdf7397f26abfcd7

x-dxvk-source: &dxvk_source
  type: git
  url: "https://github.com/ValveSoftware/dxvk.git"
  commit: fbca62df8e09ef6962f300a78e01056e020a3081

cleanup:
  - "*.a"
  - "*.la"
  - /include
  - /lib/pkgconfig
  - /lib32/pkgconfig
  - /lib/cmake
  - /lib32/cmake
  - /share/man

  - /bin/function_grep.pl
  - /bin/widl
  - /bin/winebuild
  - /bin/winecpp
  - /bin/winedump
  - /bin/wineg++
  - /bin/winegcc
  - /bin/winemaker
  - /bin/wmc
  - /bin/wrc

  - /lib/wine/*.def
  - /lib32/wine/*.def
modules:

  - name: wine-widl
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
    make-args:
      - tools/widl
    no-make-install: true
    build-commands:
      - install -Dm755 -t ${FLATPAK_DEST}/bin/ tools/widl/widl
    sources:
      - *wine_source

  - name: vkd3d
    config-opts: &vkd3d_config_opts
      - --disable-tests
    sources: 
      - *vkd3d_source

  - name: vkd3d-32bit
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
    config-opts: *vkd3d_config_opts
    sources:
    - *vkd3d_source


  - name: wine
    build-options:
      prepend-pkg-config-path: /app/share/steam/compatibilitytools.d/Proton/lib/pkgconfig
      arch:
        x86_64:
          config-opts:
            - --enable-win64
          libdir: /app/share/steam/compatibilitytools.d/Proton/lib
    config-opts: &wine_common_opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
      - --without-oss
    make-install-args: &wine_common_make_install_args
      - LDCONFIG=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
    sources:
      - *wine_source

  - name: wine-32bit
    only-arches:
      - x86_64
    build-options:
      prepend-pkg-config-path: /app/share/steam/compatibilitytools.d/Proton/lib32/pkgconfig
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --bindir=/app/share/steam/compatibilitytools.d/Proton/bin32
    config-opts: *wine_common_opts
    make-install-args: *wine_common_make_install_args
    post-install:
      - mv $FLATPAK_DEST/bin32/{wine,wine-preloader} $FLATPAK_DEST/bin/
    cleanup:
      - /bin32
    sources:
      - *wine_source


  - name: lsteamclient
    subdir: lsteamclient
    build-options:
      cxxflags: -Wno-attributes
    buildsystem: simple
    build-commands:
      - winemaker
        --nosource-fix
        --nolower-include
        --nodlls
        --nomsvcrt
        -I${FLATPAK_DEST}/include
        -I${FLATPAK_DEST}/include/wine
        -I${FLATPAK_DEST}/include/wine/windows
        -L${FLATPAK_DEST}/lib
        -L${FLATPAK_DEST}/lib/wine
        -DSTEAM_API_EXPORTS
        -Dprivate=public -Dprotected=public
        --dll
        .
      - make -j${FLATPAK_BUILDER_N_JOBS}
    post-install:
      - install -Dm755 lsteamclient.dll.so -t ${FLATPAK_DEST}/lib/wine/
    sources:
      - *proton_source

  - name: lsteamclient-32bit
    subdir: lsteamclient
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      cxxflags: -Wno-attributes
    buildsystem: simple
    build-commands:
      - winemaker
        --nosource-fix
        --nolower-include
        --nodlls
        --nomsvcrt
        --wine32
        -I${FLATPAK_DEST}/include
        -I${FLATPAK_DEST}/include/wine
        -I${FLATPAK_DEST}/include/wine/windows
        -L${FLATPAK_DEST}/lib32
        -L${FLATPAK_DEST}/lib32/wine
        -DSTEAM_API_EXPORTS
        -Dprivate=public -Dprotected=public
        --dll
        .
      - make CC="winegcc -m32" CXX="wineg++ -m32" -j${FLATPAK_BUILDER_N_JOBS}
    post-install:
      - install -Dm755 lsteamclient.dll.so -t ${FLATPAK_DEST}/lib32/wine/
    sources:
      - *proton_source


  - name: libsteam_api-bin-32bit
    #WARNING proprietary
    build-options:
      strip: false
      no-debuginfo: true
    subdir: steam_helper
    buildsystem: simple
    build-commands:
      - install -Dm755 libsteam_api.so -t ${FLATPAK_DEST}/lib32/
    sources:
      - *proton_source


  - name: steam_helper-32bit
    subdir: steam_helper
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
    buildsystem: simple
    build-commands:
      - winemaker
        --nosource-fix
        --nolower-include
        --nodlls
        --wine32
        -I${FLATPAK_DEST}/include
        -I${FLATPAK_DEST}/include/wine
        -I${FLATPAK_DEST}/include/wine/windows
        -I${FLATPAK_DEST}/include/wine/msvcrt
        -I../lsteamclient/steamworks_sdk_142
        -L${FLATPAK_DEST}/lib32
        -L${FLATPAK_DEST}/lib32/wine
        -lsteam_api
        -lole32
        --guiexe
        .
      - make CC="winegcc -m32" CXX="wineg++ -m32"
    post-install:
      - install -Dm755 steam_helper.exe.so ${FLATPAK_DEST}/lib32/wine/steam.exe.so
    sources:
      - *proton_source


  - name: openvr
    buildsystem: cmake-ninja
    post-install:
      - install -Dm755 bin/win64/openvr_api.dll ${FLATPAK_DEST}/lib/wine/dxvk/openvr_api_dxvk.dll
      - install -Dm755 bin/win32/openvr_api.dll ${FLATPAK_DEST}/lib32/wine/dxvk/openvr_api_dxvk.dll
    sources: 
      - *openvr_source


  - name: vrclient
    subdir: vrclient_x64/vrclient_x64
    buildsystem: simple
    build-commands:
      - winemaker
        --nosource-fix
        --nolower-include
        --nodlls
        --nomsvcrt
        -I${FLATPAK_DEST}/include
        -I${FLATPAK_DEST}/include/wine
        -I${FLATPAK_DEST}/include/wine/windows
        -I.
        -I..
        -L${FLATPAK_DEST}/lib
        -L${FLATPAK_DEST}/lib/wine
        --dll
        .
      - make -j${FLATPAK_BUILDER_N_JOBS}
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_DEST}/lib/wine/vrclient_x64.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_DEST}/lib/wine/fakedlls/vrclient_x64.dll
    sources:
      - *proton_source

  - name: vrclient-32bit
    subdir: vrclient_x64/vrclient_x64
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
    buildsystem: simple
    build-commands:
      - winemaker
        --nosource-fix
        --nolower-include
        --nodlls
        --nomsvcrt
        --wine32
        -I${FLATPAK_DEST}/include
        -I${FLATPAK_DEST}/include/wine
        -I${FLATPAK_DEST}/include/wine/windows
        -I.
        -I..
        -L${FLATPAK_DEST}/lib32
        -L${FLATPAK_DEST}/lib32/wine
        --dll
        .
      - make CC="winegcc -m32" CXX="wineg++ -m32" -j${FLATPAK_BUILDER_N_JOBS}
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_DEST}/lib32/wine/vrclient.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_DEST}/lib32/wine/fakedlls/vrclient.dll
    sources:
      - *proton_source


  - name: glslang
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_SHARED_LIBS=OFF
    sources:
      - type: archive
        url: "https://github.com/KhronosGroup/glslang/archive/7.12.3352.tar.gz"
        sha256: 4ecce011b73dd7196a5114f66776d5a4c4c3674fc9bc6f39ad3c1ee15a8abbe1
    cleanup:
      - "*"


  - name: dxvk
    buildsystem: meson
    build-options: &dxvk_64_build_options
      config-opts:
        - --cross-file=../build-win64.txt
        - --libdir=lib/wine/dxvk
        - --bindir=lib/wine/dxvk
    config-opts: &dxvk_config_opts
      - --buildtype=release
      - --strip
      - -Denable_tests=false
      - -Denable_dxgi=true
      - -Denable_d3d9=true
      - -Denable_d3d10=true
      - -Denable_d3d11=true
    post-install:
      - git describe --tags --long --always > ${FLATPAK_DEST}/lib/wine/dxvk/version
      - ln -s version ${FLATPAK_DEST}/lib/wine/dxvk/d9vk_version
    sources:
      - *dxvk_source

  - name: dxvk-32bit
    buildsystem: meson
    build-options: &dxvk_32_build_options
      config-opts:
        - --cross-file=../build-win32.txt
        - --libdir=lib32/wine/dxvk
        - --bindir=lib32/wine/dxvk
    config-opts: *dxvk_config_opts
    post-install:
      - git describe --tags --long --always > ${FLATPAK_DEST}/lib32/wine/dxvk/version
      - ln -s version ${FLATPAK_DEST}/lib32/wine/dxvk/d9vk_version
    sources:
      - *dxvk_source


  - name: wine-mono-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/mono
      - cp -a . ${FLATPAK_DEST}/share/wine/mono/wine-mono-4.9.4
    sources:
      - type: archive
        url: "https://dl.winehq.org/wine/wine-mono/4.9.4/wine-mono-bin-4.9.4.tar.gz"
        sha256: df97cdb904a583a1f92ce17d9d4793aed063ebc9bb139b6d1989b22a534c7b63


  - name: wine-gecko-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/gecko
      - |
        for a in wine-gecko-*-x86{,_64}.tar.bz2; do
          tar -xf "$a" -C ${FLATPAK_DEST}/share/wine/gecko/
        done
    sources:
      - type: file
        url: "https://dl.winehq.org/wine/wine-gecko/2.47.1/wine-gecko-2.47.1-x86.tar.bz2"
        sha256: 06a00cedf391ee07bbca0b3282e5c8ad9d950446d50648d2ff417716816fd1ab
      - type: file
        url: "https://dl.winehq.org/wine/wine-gecko/2.47.1/wine-gecko-2.47.1-x86_64.tar.bz2"
        sha256: ea5246e4c91d1aa1226658e1749b6e5d0e9353b52b14df79c4b93b6e61a3c59e


  - name: default-prefix
    build-options:
      env:
        WINEPREFIX: /app/share/steam/compatibilitytools.d/Proton/share/default_pfx
        LC_ALL: C
    buildsystem: simple
    build-commands:
      #FIXME unclever way to wait for all child procs
      - strace -e trace=none -f wine wineboot


  - name: proton
    build-options:
      env:
        PROTON_VERSION: *proton_version
    buildsystem: simple
    build-commands:
      - install -Dm755 -t ${FLATPAK_DEST}/
          proton
          filelock.py
          user_settings.sample.py
      - install -Dm644 -t ${FLATPAK_DEST}/
          compatibilitytool.vdf
          toolmanifest.vdf
          proton_3.7_tracked_files
      - install -Dm644 dist.LICENSE ${FLATPAK_DEST}/LICENSE
      - |
        TIMESTAMP=$(date +%s)
        echo ${TIMESTAMP} proton_flatpak-${PROTON_VERSION} > ${FLATPAK_DEST}/version
        sed \
          -e "s/@VERSION@/${PROTON_VERSION}/g" \
          -e "s/@BUILD@/${TIMESTAMP}/g" \
          -i ${FLATPAK_DEST}/compatibilitytool.vdf
      - |
        cd ${FLATPAK_DEST}
        mkdir dist
        ln -s ../bin dist/bin
        ln -s ../lib dist/lib64
        ln -s ../lib32 dist/lib
        ln -s ../share dist/share
        ln -s ../version dist/version
      - install -Dm644 -t ${FLATPAK_DEST}/share/metainfo ${FLATPAK_ID}.metainfo.xml
      - appstream-compose --basename=${FLATPAK_ID} --prefix=${FLATPAK_DEST} --origin=flatpak ${FLATPAK_ID}
    sources:
      - *proton_source
      - type: patch
        path: proton_flatpak.patch
      - type: file
        path: compatibilitytool.vdf
      - type: file
        path: com.valvesoftware.Steam.CompatibilityTool.Proton.metainfo.xml
